var charm = require('charm')()

var bg = '|....:....|....:....|....:....|....:....|....:....|'

var zeros = '00000000'
function precision(n, l) {
  l = l || 2
  var s = (n % 1).toString()
  var decimal = s.substring(2, l + 2)
  if(decimal.length < l)
    decimal + zeros.substring(0, l - decimal.length)
  return Math.floor(n) + '.' + (decimal || '0')
}

module.exports = function (message, fr) {

  var tick = 1000 / (fr || 5)

  message = message || 'loading...'

  charm.pipe(process.stdout);
  charm.reset()

  var bar = {
    ts: 0,
    done: 0,
    todo: 100,
    progress: function (done, outof) {
      bar.done = done
      bar.outof = outof
      bar.update()
    },
    label: function (l, show) {
      var m = process.stdout.columns
      if(l.length > m)
        l = l.substring(0, m - 3) + '...'
      bar._label = l
      bar.update(show)
    },
    update: function (show) {
      var ts = Date.now()
      //set a length to show a message,
      //forces that message.
      if(show) {
        bar.draw()
        bar.ts = Date.now() + show
        clearTimeout(bar.int)
        bar.int = null
      }
      else if(bar.ts + tick < ts) {
        bar.draw()
        bar.ts = ts
        clearTimeout(bar.int)
        bar.int = null
      } else if(!bar.int) {
        //if there hasn't been an update since
        //twice the min time, force update.
        bar.int = setTimeout(function () {
          bar.update()
          bar.int = null
        }, tick * 2)
      }
    },
    draw: function () {
      var c = this.done, w = this.outof
      c = Math.min(c, w)
      var p = ~~(((c / w) * 50) || 0) + 1
      var done = bg.substring(0, p)
      var todo = bg.substring(p)

      charm
      .position(0, 0)
      .erase('line')
      .write(this._label + '\n')
      .display('reverse').write(done).display('reset').write(todo)
      .write(' ' + precision(c ? Math.floor((c/w)*10000)/100 : 0) + '%   \n\n')
    }
  }

  bar.label(message)
  return bar
}

